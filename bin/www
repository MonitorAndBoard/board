#!/usr/bin/nodejs
var debug = require('debug')('my-application');
var app = require('../app');
var redis=require('redis');
var client=redis.createClient('6379','127.0.0.1');

app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});
//线性图
function pushline(){
    //这里是linechart的初始设置
    var chart={
        backgroundColor: {
            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
            stops: [ [0, 'rgb(96, 96, 96)'], [1, 'rgb(16, 16, 16)'] ]
        }
    };
    var yAxis = {
        plotLines: [{
            value: 0,
            width: 1,
            color: '#808080'
        }]
    };
    var tooltip = {
        valueSuffix: '\xB0C'
    };

    var legend = {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle',
        borderWidth: 0
    };
    var payload={};
    payload.chart=chart;
    payload.yAxis = yAxis;
    payload.tooltip = tooltip;
    payload.legend = legend;
    return payload;
}
//柱状图
function pushcolumn(){
    var chart= {
            type: 'column',
            backgroundColor:'#333333'
        };
    var yAxis= {
            allowDecimals: false
        };
     var xAxis={
                    type: 'category'
                };
    var tooltip= {
            formatter: function () {
                return '<b>' + this.series.name + '</b><br/>' +
                    this.point.y + ' ' + this.point.name.toLowerCase();
            }
        };
    var payload={};
    payload.chart=chart;
    payload.yAxis=yAxis;
    payload.xAxis=xAxis;
    payload.tooltip=tooltip;
    return payload;
}
//区域图
function pusharea(){
    var chart= {
        type: 'area',

    };
    var xAxis= {
        allowDecimals: false,
            labels: {
            formatter: function () {
                return this.value; // clean, unformatted number for year
            }
        }
    };
    var yAxis={
        title: {
            text: 'Nuclear weapon states'
        },
        labels: {
            formatter: function () {
                return this.value / 1000 + 'k';
            }
        }
    };
    var tooltip= {
        pointFormat: '{series.name} produced <b>{point.y:,.0f}</b><br/>warheads in {point.x}'
    };
    var series= [{
        name: 'USA',
        data: [null, null, null, null, null, 6, 11, 32, 110, 235, 369, 640,
            1005, 1436, 2063, 3057, 4618, 6444, 9822, 15468, 20434, 24126,
            27387, 29459, 31056, 31982, 32040, 31233, 29224, 27342, 26662,
            26956, 27912, 28999, 28965, 27826, 25579, 25722, 24826, 24605,
            24304, 23464, 23708, 24099, 24357, 24237, 24401, 24344, 23586,
            22380, 21004, 17287, 14747, 13076, 12555, 12144, 11009, 10950,
            10871, 10824, 10577, 10527, 10475, 10421, 10358, 10295, 10104]
    }, {
        name: 'USSR/Russia',
        data: [null, null, null, null, null, null, null, null, null, null,
            5, 25, 50, 120, 150, 200, 426, 660, 869, 1060, 1605, 2471, 3322,
            4238, 5221, 6129, 7089, 8339, 9399, 10538, 11643, 13092, 14478,
            15915, 17385, 19055, 21205, 23044, 25393, 27935, 30062, 32049,
            33952, 35804, 37431, 39197, 45000, 43000, 41000, 39000, 37000,
            35000, 33000, 31000, 29000, 27000, 25000, 24000, 23000, 22000,
            21000, 20000, 19000, 18000, 18000, 17000, 16000]
    }];
    var payload={};
    payload.chart=chart;
    payload.yAxis=yAxis;
    payload.xAxis=xAxis;
    payload.tooltip=tooltip;
    payload.series=series;//该数据应该从后台得到，现在先写到这里，供后台参考
    return payload;
}
//饼状图
function pushpie(){
    var chart= {
        plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            type: 'pie'
    };
    var tooltip= {
        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
    };
    var series=[{
        name: 'Brands',
        colorByPoint: true,
        data: [{
            name: 'Microsoft Internet Explorer',
            y: 56.33
        }, {
            name: 'Chrome',
            y: 24.03,
            sliced: true,
            selected: true
        }, {
            name: 'Firefox',
            y: 10.38
        }, {
            name: 'Safari',
            y: 4.77
        }, {
            name: 'Opera',
            y: 0.91
        }, {
            name: 'Proprietary or Undetectable',
            y: 0.2
        }]
    }];
    var payload={};
    payload.chart=chart;
    payload.tooltip=tooltip;
    payload.series=series;//该数据应该从后台得到，现在先写到这里，供后台参考
    return payload;
}
var io=require('socket.io').listen(server);
io.sockets.on('connection',function(socket){
//通过socket把前端的信息推送到后台来
socket.on('chartmsg',function(data){ 
    var channelName=data.channel;//通道名字
//一下是从redis数据库推送过来的数据
    try{
    var client=redis.createClient('6379','127.0.0.1');
    client.on('error',function (error) {
        console.log(error);
    });
    client.on('ready',function  (){
        client.subscribe(channelName);
    });
    client.on('message',function  (channel,message) {
        if(channel.indexOf("pushline")>=0)
        {
            var info=JSON.parse(message);
            var payload=pushline();
            var serie=[{name:info.name,data:info.data}];
            var xAxis={categories:info.categories};
            payload.series=serie;
            payload.xAxis = xAxis;
            //将redis推送过来打数据和所有chart的信息封装好后向前端推送
            socket.emit('pushData',payload); 
        }
        if(channel.indexOf("pushcolumn")>=0)
        {
            var info=JSON.parse(message);
            var payload=pushcolumn();
            var serie=[{name:info.name,data:info.data}];
            payload.series=serie;
            socket.emit('pushData',payload);
        }
    });
}
catch(error){
    console.log(error);
}
});  
});
