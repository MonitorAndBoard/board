#!/usr/bin/nodejs
var debug = require('debug')('my-application');
var app = require('../app');
var redis=require('redis');
var client=redis.createClient('6379','127.0.0.1');

app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});

//这里是linechart的初始设置
    var yAxis = {
        plotLines: [{
            value: 0,
            width: 1,
            color: '#808080'
        }]
    };

    var tooltip = {
        valueSuffix: '\xB0C'
    }

    var legend = {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle',
        borderWidth: 0
    };
var payload={};
var io=require('socket.io').listen(server);
io.sockets.on('connection',function(socket){
//通过socket把前端的信息推送到后台来
socket.on('chartmsg',function(data){ 
    var channelName=data.channel;//通道名字
    payload.title={text:data.title};//chart的名字
    payload.yAxis = yAxis;
    payload.yAxis.title={text:data.yAxis};//y轴的名字
    payload.tooltip = tooltip;
    payload.legend = legend;
//一下是从redis数据库推送过来的数据
    try{
    var client=redis.createClient('6379','127.0.0.1');
    client.on('error',function (error) {
        console.log(error);
    });
    client.on('ready',function  (){
        client.subscribe(channelName);
    });
    client.on('message',function  (channel,message) {
        var info=JSON.parse(message);
        var serie=[{name:info.name,data:info.data}];
        var xAxis={categories:info.categories};
        payload.series=serie;
        payload.xAxis = xAxis;
		//将redis推送过来打数据和所有chart的信息封装好后向前端推送
        socket.emit('test',payload); 
        //console.log(payload);
    });
}
catch(error){
    console.log(error);
}
});  
});
